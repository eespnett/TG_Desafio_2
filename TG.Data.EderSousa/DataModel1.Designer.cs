//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 18/03/2020 12:42:41
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Reflection;
using System.Linq.Expressions;
using System.Data.Entity.Core;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata


#endregion

namespace SousaitTgModel
{

    #region SousaitTgEntities

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class SousaitTgEntities : ObjectContext
    {
        #region Constructors

        /// <summary>
        /// Initialize a new SousaitTgEntities object.
        /// </summary>
        public SousaitTgEntities() :
                base(@"name=SousaitTgEntitiesConnectionString", "SousaitTgEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        /// <summary>
        /// Initializes a new SousaitTgEntities object using the connection string found in the 'SousaitTgEntities' section of the application configuration file.
        /// </summary>
        public SousaitTgEntities(string connectionString) :
                base(connectionString, "SousaitTgEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        /// <summary>
        /// Initialize a new SousaitTgEntities object.
        /// </summary>
        public SousaitTgEntities(EntityConnection connection) : base(connection, "SousaitTgEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }


        #endregion

        #region Partial Methods

        partial void OnContextCreated();

        #endregion

        #region ObjectSet Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Cliente> Clientes
        {
            get
            {
                if ((_Clientes == null))
                {
                    _Clientes = base.CreateObjectSet<Cliente>("Clientes");
                }
                return _Clientes;
            }
        }
        private ObjectSet<Cliente> _Clientes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Clientelogradouro> Clientelogradouros
        {
            get
            {
                if ((_Clientelogradouros == null))
                {
                    _Clientelogradouros = base.CreateObjectSet<Clientelogradouro>("Clientelogradouros");
                }
                return _Clientelogradouros;
            }
        }
        private ObjectSet<Clientelogradouro> _Clientelogradouros;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Logradouro> Logradouros
        {
            get
            {
                if ((_Logradouros == null))
                {
                    _Logradouros = base.CreateObjectSet<Logradouro>("Logradouros");
                }
                return _Logradouros;
            }
        }
        private ObjectSet<Logradouro> _Logradouros;

        #endregion
        #region AddTo Methods

        /// <summary>
        /// Deprecated Method for adding a new object to the Clientes EntitySet.
        /// </summary>
        public void AddToClientes(Cliente cliente)
        {
            base.AddObject("Clientes", cliente);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Clientelogradouros EntitySet.
        /// </summary>
        public void AddToClientelogradouros(Clientelogradouro clientelogradouro)
        {
            base.AddObject("Clientelogradouros", clientelogradouro);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Logradouros EntitySet.
        /// </summary>
        public void AddToLogradouros(Logradouro logradouro)
        {
            base.AddObject("Logradouros", logradouro);
        }

        #endregion
    }

    #endregion
}

namespace SousaitTgModel
{

    /// <summary>
    /// There are no comments for SousaitTgModel.Cliente in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ID
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="SousaitTgModel", Name="Cliente")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Cliente : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Cliente object.
        /// </summary>
        /// <param name="iD">Initial value of ID.</param>
        /// <param name="nome">Initial value of Nome.</param>
        /// <param name="endereco">Initial value of Endereco.</param>
        /// <param name="email">Initial value of Email.</param>
        public static Cliente CreateCliente(int iD, string nome, string endereco, string email)
        {
            Cliente cliente = new Cliente();
            cliente.ID = iD;
            cliente.Nome = nome;
            cliente.Endereco = endereco;
            cliente.Email = email;
            return cliente;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ID
        {
            get
            {
                int value = _ID;
                OnGetID(ref value);
                return value;
            }
            set
            {
                if (_ID != value)
                {
                  OnIDChanging(ref value);
                  ReportPropertyChanging("ID");
                  _ID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ID");
                  OnIDChanged();
              }
            }
        }
        private int _ID;
        partial void OnGetID(ref int value);
        partial void OnIDChanging(ref int value);
        partial void OnIDChanged();
    
        /// <summary>
        /// There are no comments for Nome in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Nome
        {
            get
            {
                string value = _Nome;
                OnGetNome(ref value);
                return value;
            }
            set
            {
                if (_Nome != value)
                {
                  OnNomeChanging(ref value);
                  ReportPropertyChanging("Nome");
                  _Nome = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Nome");
                  OnNomeChanged();
              }
            }
        }
        private string _Nome;
        partial void OnGetNome(ref string value);
        partial void OnNomeChanging(ref string value);
        partial void OnNomeChanged();
    
        /// <summary>
        /// There are no comments for Endereco in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Endereco
        {
            get
            {
                string value = _Endereco;
                OnGetEndereco(ref value);
                return value;
            }
            set
            {
                if (_Endereco != value)
                {
                  OnEnderecoChanging(ref value);
                  ReportPropertyChanging("Endereco");
                  _Endereco = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Endereco");
                  OnEnderecoChanged();
              }
            }
        }
        private string _Endereco;
        partial void OnGetEndereco(ref string value);
        partial void OnEnderecoChanging(ref string value);
        partial void OnEnderecoChanged();
    
        /// <summary>
        /// There are no comments for Email in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Email
        {
            get
            {
                string value = _Email;
                OnGetEmail(ref value);
                return value;
            }
            set
            {
                if (_Email != value)
                {
                  OnEmailChanging(ref value);
                  ReportPropertyChanging("Email");
                  _Email = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Email");
                  OnEmailChanged();
              }
            }
        }
        private string _Email;
        partial void OnGetEmail(ref string value);
        partial void OnEmailChanging(ref string value);
        partial void OnEmailChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for SousaitTgModel.Clientelogradouro in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ID
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="SousaitTgModel", Name="Clientelogradouro")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Clientelogradouro : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Clientelogradouro object.
        /// </summary>
        /// <param name="iD">Initial value of ID.</param>
        /// <param name="iDCliente">Initial value of IDCliente.</param>
        /// <param name="iDLogradouro">Initial value of IDLogradouro.</param>
        public static Clientelogradouro CreateClientelogradouro(int iD, int iDCliente, int iDLogradouro)
        {
            Clientelogradouro clientelogradouro = new Clientelogradouro();
            clientelogradouro.ID = iD;
            clientelogradouro.IDCliente = iDCliente;
            clientelogradouro.IDLogradouro = iDLogradouro;
            return clientelogradouro;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ID
        {
            get
            {
                int value = _ID;
                OnGetID(ref value);
                return value;
            }
            set
            {
                if (_ID != value)
                {
                  OnIDChanging(ref value);
                  ReportPropertyChanging("ID");
                  _ID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ID");
                  OnIDChanged();
              }
            }
        }
        private int _ID;
        partial void OnGetID(ref int value);
        partial void OnIDChanging(ref int value);
        partial void OnIDChanged();
    
        /// <summary>
        /// There are no comments for IDCliente in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int IDCliente
        {
            get
            {
                int value = _IDCliente;
                OnGetIDCliente(ref value);
                return value;
            }
            set
            {
                if (_IDCliente != value)
                {
                  OnIDClienteChanging(ref value);
                  ReportPropertyChanging("IDCliente");
                  _IDCliente = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IDCliente");
                  OnIDClienteChanged();
              }
            }
        }
        private int _IDCliente;
        partial void OnGetIDCliente(ref int value);
        partial void OnIDClienteChanging(ref int value);
        partial void OnIDClienteChanged();
    
        /// <summary>
        /// There are no comments for IDLogradouro in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int IDLogradouro
        {
            get
            {
                int value = _IDLogradouro;
                OnGetIDLogradouro(ref value);
                return value;
            }
            set
            {
                if (_IDLogradouro != value)
                {
                  OnIDLogradouroChanging(ref value);
                  ReportPropertyChanging("IDLogradouro");
                  _IDLogradouro = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IDLogradouro");
                  OnIDLogradouroChanged();
              }
            }
        }
        private int _IDLogradouro;
        partial void OnGetIDLogradouro(ref int value);
        partial void OnIDLogradouroChanging(ref int value);
        partial void OnIDLogradouroChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for SousaitTgModel.Logradouro in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ID
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="SousaitTgModel", Name="Logradouro")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Logradouro : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Logradouro object.
        /// </summary>
        /// <param name="iD">Initial value of ID.</param>
        /// <param name="endereco">Initial value of Endereco.</param>
        /// <param name="bairro">Initial value of Bairro.</param>
        /// <param name="cEP">Initial value of CEP.</param>
        public static Logradouro CreateLogradouro(int iD, string endereco, string bairro, string cEP)
        {
            Logradouro logradouro = new Logradouro();
            logradouro.ID = iD;
            logradouro.Endereco = endereco;
            logradouro.Bairro = bairro;
            logradouro.CEP = cEP;
            return logradouro;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ID
        {
            get
            {
                int value = _ID;
                OnGetID(ref value);
                return value;
            }
            set
            {
                if (_ID != value)
                {
                  OnIDChanging(ref value);
                  ReportPropertyChanging("ID");
                  _ID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ID");
                  OnIDChanged();
              }
            }
        }
        private int _ID;
        partial void OnGetID(ref int value);
        partial void OnIDChanging(ref int value);
        partial void OnIDChanged();
    
        /// <summary>
        /// There are no comments for Endereco in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Endereco
        {
            get
            {
                string value = _Endereco;
                OnGetEndereco(ref value);
                return value;
            }
            set
            {
                if (_Endereco != value)
                {
                  OnEnderecoChanging(ref value);
                  ReportPropertyChanging("Endereco");
                  _Endereco = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Endereco");
                  OnEnderecoChanged();
              }
            }
        }
        private string _Endereco;
        partial void OnGetEndereco(ref string value);
        partial void OnEnderecoChanging(ref string value);
        partial void OnEnderecoChanged();
    
        /// <summary>
        /// There are no comments for Bairro in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Bairro
        {
            get
            {
                string value = _Bairro;
                OnGetBairro(ref value);
                return value;
            }
            set
            {
                if (_Bairro != value)
                {
                  OnBairroChanging(ref value);
                  ReportPropertyChanging("Bairro");
                  _Bairro = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Bairro");
                  OnBairroChanged();
              }
            }
        }
        private string _Bairro;
        partial void OnGetBairro(ref string value);
        partial void OnBairroChanging(ref string value);
        partial void OnBairroChanged();
    
        /// <summary>
        /// There are no comments for CEP in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CEP
        {
            get
            {
                string value = _CEP;
                OnGetCEP(ref value);
                return value;
            }
            set
            {
                if (_CEP != value)
                {
                  OnCEPChanging(ref value);
                  ReportPropertyChanging("CEP");
                  _CEP = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CEP");
                  OnCEPChanged();
              }
            }
        }
        private string _CEP;
        partial void OnGetCEP(ref string value);
        partial void OnCEPChanging(ref string value);
        partial void OnCEPChanged();

        #endregion
    }

}
